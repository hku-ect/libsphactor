<class name = "sph_stage" state = "stable">

    <constructor>
        Constructor, creates a new Sphactor stage.
        <argument name = "stage name" type = "string" />
    </constructor>

    <destructor>
        Destructor, destroys a Sphactor stage and its actors. 
    </destructor>

    <constructor name = "load">
        Load a new stage from a stage config filepath.
        Returns NULL on failure.
        <argument name = "config path" type = "string" />
    </constructor>

    <method name = "save">
        Save the stage to the active config filepath.
        Return -1 on failure or 0 on success.
        <return type = "integer"/>
    </method>

    <method name = "save as">
        Save the stage to the a config filepath.
        Return -1 on failure or 0 on success.
        <argument name = "config path" type = "string" />
        <return type = "integer"/>
    </method>

    <method name = "clear">
        Clear the stage, destroying all actors in the stage.
        <return type = "integer"/>
    </method>

    <method name = "actors">
        Return the hash map of actors from the stage.
        <return type = "zhash" mutable = "0" />
    </method>

    <method name = "find actor">
        Find an actor by it's identifier (uuid). Returns a sphactor reference or NULL if not found.
        Please note: if you want to destroy the actor it's best to use the remove_actor method of 
        this class so it's also remove from the stage.
        <argument name = "id" type = "string" />
        <return type = "sphactor" />
    </method>

    <method name = "remove actor">
        Remove an actor by it's identifier (uuid) and destroy it. Returns 0 if succesful -1 if not found.
        <argument name = "id" type = "string" />
        <return type = "integer" />
    </method>

    <method name = "add actor">
        Add an actor to the stage. Returns 0 if succesful -1 if not found.
        <argument name = "actor" type = "sphactor" />
        <return type = "integer" />
    </method>

</class>

